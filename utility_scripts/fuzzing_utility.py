#! /usr/bin/env python3

import sys
from scapy.all import IP, ICMP, RandIP, RandShort, RandByte, RandInt, sr1

class fuzzing_attack(object):

    def check(self):
        print('checking')

    def generator(self):
        n_generations = int(sys.argv[2])
        n_packets = int(sys.argv[3])
        ip_dst = sys.argv[4]


        for i in range(n_generations):
            pkts_send = [IP(dst=ip_dst, src=RandIP(), id=RandShort(), ttl=(RandInt % 255))/ICMP(type=RandByte(), seq=RandInt()) for j in range(n_packets)]
            self.send_pkts(pkts_send)

    def send_pkts(self, pkts):

        no_response_pkt = IP(src="127.0.0.1", dst="127.0.0.1")/ICMP()/"No response received"

        for pkt in pkts:
            self.pkts_write.append(pkt)
            pkt_received = sr1(pkt, verbose=0, timeout=3)

            if pkt_received == None:
                self.pkts_write.append(no_response_pkt)
            else:
                self.pkts_write.append(pkt_received)

    def write_pcap(self, pkts_write):
        print()


    def __init__(self):
        self.pkts_write = []
        print('Ps')