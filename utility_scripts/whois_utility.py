#! /usr/bin/env python3

import sys, pythonwhois
from pprint import pformat, pprint

class whois_scan(object):

    def check(self):
        if len(sys.argv) < 3:
            print("Usage: python3 pentesting-multitool.py whois <mode> <domain> <file>\n"
                  "Available modes: \n"
                  "all: It will write a full whois query in the specified file.\n"
                  "custom <keys> (separated by \",\"): It will write the key values in the specified file.\n"
                  "keys <domain>: It will you a list of the available keys to show for the specified domain.")
            exit()

    def run(self):
        if sys.argv[2] == "all":
            self.all()
        elif sys.argv[2] == "custom":
            self.custom()
        elif sys.argv[2] == "keys":
            self.show_keys()

    def custom(self):
        domain = sys.argv[4]
        file = open(sys.argv[5], 'a')
        print("File opened\n"
              "Getting information and writing it on the file..")
        whois = pythonwhois.get_whois(domain)
        keys = sys.argv[3].split(',')
        for key in keys:
            file.write("%s: " % key)
            file.write(whois.get(key, "That key doesnt exist. If you want to see all available keys use: pyhton3 pentesting-multitool.py whois keys."))
            file.write("\n")
        file.close()

    def show_keys(self):
        domain = sys.argv[3]
        keys = pythonwhois.get_whois(domain).keys()
        pprint(keys)

    def all(self):
        domain = sys.argv[3]
        file = open(sys.argv[4], 'a')
        print("File opened\n"
              "Getting information and writing it on the file..")
        whois = pformat(pythonwhois.get_whois(domain))
        file.write(whois)
        file.close()

    def __init__(self):
        self.check()
        self.run()
        exit()