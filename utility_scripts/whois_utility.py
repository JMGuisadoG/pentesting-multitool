#! /usr/bin/env python3

import sys, pythonwhois
from pprint import pformat, pprint

class whois_scan(object):

    def check(self):
        if len(sys.argv) < 3:
            print("Usage: python3 pentesting-multitool.py whois <options> <domain> <file>\n"
                  "Available options: \n"
                  "It will write a full whois query in the specified file if you not set any option.\n"
                  "Also you can specify the keys that you want to get on your file (separated by \",\".)\n"
                  "Use: keys <domain>: It will you a list of the available keys to show for the specified domain.")
            exit()

    def run(self):
        if sys.argv[2] == "keys":
            self.show_keys()
        elif len(sys.argv) == 4:
            self.all()
        elif len(sys.argv) == 5:
            self.custom()

    def custom(self):
        domain = sys.argv[3]
        file = open(sys.argv[4], 'a')
        print("File opened\n"
              "Getting information and writing it on the file..")
        whois = pythonwhois.get_whois(domain)
        keys = sys.argv[2].split(',')
        for key in keys:
            str_value = str(whois.get(key, "That key doesn't exist. If you want to see all available keys use: pyhton3 pentesting-multitool.py whois keys <domain>"))
            file.write("%s: " % key)
            file.write(str_value)
            file.write("\n")
        file.close()

    def show_keys(self):
        domain = sys.argv[3]
        keys = pythonwhois.get_whois(domain).keys()
        pprint(keys)

    def all(self):
        domain = sys.argv[2]
        file = open(sys.argv[3], 'a')
        print("File opened\n"
              "Getting information and writing it on the file..")
        whois = pformat(pythonwhois.get_whois(domain))
        file.write(whois)
        file.close()

    def __init__(self):
        self.check()
        self.run()
        exit()